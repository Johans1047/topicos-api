# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# Define en qué ramas se ejecuta automáticamente el pipeline
trigger:
  - main  # O la rama que uses

# Define el pool con el agente self-hosted registrado en Azure DevOps
pool:
  name: my-computer  # Asegúrate de que este sea el nombre del pool donde está registrado tu agente self-hosted

# Define variables reutilizables
variables:
  uiImageName: topicos-api-frontend
  apiImageName: topicos-api-backend

# Organizar el pipeline en distintas etapas
stages:
  # Build de la app
  - stage: Build
    displayName: Build and Push Docker Image to the Azure Container Registry and Create an instance in the ACI
    # Cada job es una unidad de trabajo que se ejecuta en un agente (puede ser una máquina virtual o un agente self-hosted)
    jobs:
      - job: DockerBuildJob
        displayName: Build and Push
        # Definir el pool del agente (en este caso, tu self-hosted)
        pool:
          name: my-computer  # Asegúrate de que el nombre coincida con el definido en Azure DevOps

        # Permite definir tasks, scripts o templates
        steps:
          # Construir y subir imagen FRONTEND
          - task: Docker@2
            displayName: Build and Push UI Image to ACR
            inputs:
              containerRegistry: 'testconnection'  # Nombre del servicio de conexión a tu Azure Container Registry
              repository: '$(uiImageName)'        # Nombre del repositorio de la imagen en ACR
              command: 'buildAndPush'             # Construir y empujar la imagen
              Dockerfile: '**/client/Dockerfile'  # Ruta del Dockerfile del frontend
              tags: 'latest'
               ## $(Build.BuildId)                 

          # Construir y subir imagen BACKEND
          - task: Docker@2
            displayName: Build and Push API Image to ACR
            inputs:
              containerRegistry: 'testconnection'
              repository: '$(apiImageName)'
              command: 'buildAndPush'
              Dockerfile: '**/server/Dockerfile'  # Ruta del Dockerfile del backend
              tags: 'latest'
              ##  $(Build.BuildId)
